{
  "contractName": "MockContract",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "TestFunctionCalled",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "testFunction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"TestFunctionCalled\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"testFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MockContract.sol\":\"MockContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/MockContract.sol\":{\"keccak256\":\"0xcce616da39b7f987b5f51b60a761b2a2159058528f53a2c1f9487347d154f2ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50a4f44800fa251156aa0779897986b36ea1f7b31abff42cb48aa22410a816bc\",\"dweb:/ipfs/QmRaPH1fVFbbLzUBGZtm8Danm4QABWff4MhCLE3cCYgCCX\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060a08061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e16b4a9b14602d575b600080fd5b60336035565b005b6040513381527f7fff0776526a36474f75bc6fdacd9a42517478c906443e5ebe06e7fc0956b4579060200160405180910390a156fea2646970667358221220ee9ce13b36358bc27eb648040f0d500d0e62fd9e5c17136907ce7b1b673c4b9164736f6c63430008130033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063e16b4a9b14602d575b600080fd5b60336035565b005b6040513381527f7fff0776526a36474f75bc6fdacd9a42517478c906443e5ebe06e7fc0956b4579060200160405180910390a156fea2646970667358221220ee9ce13b36358bc27eb648040f0d500d0e62fd9e5c17136907ce7b1b673c4b9164736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:219:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:10",
                "type": ""
              }
            ],
            "src": "14:203:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "58:162:9:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:162:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;133:85;;;:::i;:::-;;;181:30;;200:10;160:51:10;;181:30:9;;148:2:10;133:18;181:30:9;;;;;;;133:85::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\ncontract MockContract {\n    event TestFunctionCalled(address caller);\n\n    function testFunction() external {\n        emit TestFunctionCalled(msg.sender);\n    }\n}",
  "sourcePath": "/home/ved-mohan/Desktop/core-gasless/contracts/MockContract.sol",
  "ast": {
    "absolutePath": "project:/contracts/MockContract.sol",
    "exportedSymbols": {
      "MockContract": [
        2355
      ]
    },
    "id": 2356,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2341,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "MockContract",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2355,
        "linearizedBaseContracts": [
          2355
        ],
        "name": "MockContract",
        "nameLocation": "67:12:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "7fff0776526a36474f75bc6fdacd9a42517478c906443e5ebe06e7fc0956b457",
            "id": 2345,
            "name": "TestFunctionCalled",
            "nameLocation": "92:18:9",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2343,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "119:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 2345,
                  "src": "111:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "111:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "110:16:9"
            },
            "src": "86:41:9"
          },
          {
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "166:52:9",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2349,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "200:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "204:6:9",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "200:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 2348,
                      "name": "TestFunctionCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "181:18:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "181:30:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2352,
                  "nodeType": "EmitStatement",
                  "src": "176:35:9"
                }
              ]
            },
            "functionSelector": "e16b4a9b",
            "id": 2354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFunction",
            "nameLocation": "142:12:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "154:2:9"
            },
            "returnParameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "166:0:9"
            },
            "scope": 2355,
            "src": "133:85:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2356,
        "src": "58:162:9",
        "usedErrors": []
      }
    ],
    "src": "32:188:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-05-12T11:00:49.763Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}